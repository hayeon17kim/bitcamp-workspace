// Exam0350.java
// 주제: 부동소수점의 정규화 = 2진수로 바꾸기

package com.eomcs.basic.ex03;


class Exam0350 {
    public static void main(String[] args) {
        System.out.println(12.375f); // 32비트 부동소수점
        System.out.println(12.375f); // 64비트 부동소수점
        
        // 12.375(부동소수점) 정규화 결과
        // ==> IEEE 754 규정에 따라 부동 소수점을 2진수로 변환한다.
        // ==> 01000001 01000110 0000000 0000002 (진수) 
        // ==> 41460000(16진수)
        System.out.println(-12.375f); // 32비트 부동소수점
        System.out.println(-12.375); // 64비트 부동소수점
        
    }
}

// 방법
// 1) 정 부분을 2진수로 변환
// - 12 (10진수)
// - 1100(2진수)
// 2) 소수점 이하 부분을 2진수로 변
//- 변환 규칙
//- 소수점을 2로 곱하여 나온 결과에서 정수 부분만을 차례대로 표기한다.
//- 소수 부분이 0이거나 반복되면 계산을 멈춘다.
//- 예: 0.375(10진수)
//0.375 * 2 = 0.75  --> 0
//0.75 * 2  = 1.5   --> 1
//0.5 * 2   = 1.0   --> 1
//=> 0.011(2진수)

// 3) 소수점 이상 2진수와 소수점 이하 2진수를 합친다.
// => 12(1100) + .375(0.011) = 1100.011

// 4) 정규화
// => 










