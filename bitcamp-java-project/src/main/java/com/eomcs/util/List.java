package com.eomcs.util;


// 데이터 목록을 다루는 객체의 사용 규칙을 정의한다.
// => 데이터 목록을 다루는 객체라면 다음과 같은 기능이 있어야 한다.
public interface List<E> {
  int size();
  // 추상 메서드
  // - 서브 클래스에서 구체적인 실행을 구현하라는 의미다.
  // - 서브 클래스마다 구현 내용이 다를 수 있다면 추상 메서드로 선언한다.
  // - 또는 서브 클래스에게 구현하도록 강제하고 싶을 때도 추상 메서드로 선언한다.
  // - 수버 클래스에서 추상 메서드의 의미는
  // 해당 역할을 수행하는데 반드시 있어야 하는 기능을 정의하는데 의미가 있다.

  boolean add(E e);
  // 서브 클래스에서 구현하는 방법이 다르다.
  // 따라서 수퍼 클래스에서는 구현하지 않는다.
  // 서브 클래스에서 오버라이딩하게 한다.
  // 그럼 굳이 수퍼 클래스에 이 메서드를 둘 필요가 있는가?
  // => 서브 클래스들이 갖춰야 할 기능을 정의한다는 면에서 의미가 있다.
  // => 즉 서브 클래스들에게 반드시 갖춰야 할 기능을 강제하는 효과가 있다.


  void add(int index, E element);

  E get(int index);

  E set(int index, E element);

  E remove(int index);

  Object[] toArray();

  E[] toArray(E[] arr);
}
